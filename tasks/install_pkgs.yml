---
- name: "Get installed {{ _pkg_to_install }} version."
  command: dpkg-query --showformat='${Version}' --show {{ _pkg_to_install }}
  register: _pkg_installed_version
  failed_when: false
  changed_when: false
  check_mode: false

# Because of dependancies, we may need to hold/unhold each package each time
- name: "Unhold {{ _pkg_to_install }} version."
  dpkg_selections:
    name: "{{ item }}"
    selection: install
  loop: "{{
        [graylog_enterprise_pkg_name]
      + [graylog_pkg_name]
      + [graylog_intagration_pkg_name]
    }}"
  loop_control:
    pause: 2
  when: not graylog_pkg_version_hold or (_pkg_installed_version.stdout and _pkg_installed_version.stdout != graylog_pkg_version)

- name: "Install {{ _pkg_to_install }}"
  apt:
    name: "{{ _pkg_to_install }}{% if graylog_pkg_version is defined %}={{ graylog_pkg_version }}*{% endif %}"
    state: present
    update_cache: true
  notify: "Restart Graylog."

# Because of dependancies, we may need to hold/unhold each package each time
- name: "Hold {{ _pkg_to_install }} version."
  dpkg_selections:
    name: "{{ item }}"
    selection: "hold"
  loop: "{{
        [graylog_enterprise_pkg_name]
      + [graylog_pkg_name]
      + [graylog_intagration_pkg_name]
    }}"
  loop_control:
    pause: 2
  when: graylog_pkg_version_hold
